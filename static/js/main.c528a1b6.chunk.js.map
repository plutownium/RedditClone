{"version":3,"sources":["Thread/Thread.js","FullThread/FullThread.js","App.js","store/actions.js","serviceWorker.js","store/reducers/counter.js","store/reducers/result.js","index.js"],"names":["thread","post","style","border","float","padding","width","className","onClick","upVote","upvotes","downVote","openThread","textAlign","flair","title","author","age","comments","fullThread","props","id","App","state","posts","checkname","username","loggedIn","tempTitle","tempMsg","console","log","i","length","setState","postTitle","event","target","value","postMsg","postThread","newPosts","tempThread","unshift","signUp","checkName","handleChange","postBox","this","type","name","onChange","threads","map","index","key","to","bind","margin","path","component","FullThread","ctr","onIncrementCounter","onDecCounter","onAdd","onSub","onStoreResult","storedResults","strResult","onDeleteResult","Component","connect","counter","res","results","dispatch","result","resultElId","Boolean","window","location","hostname","match","initialState","reducer","action","newState","Object","assign","concat","Date","updatedArray","filter","rootReducer","combineReducers","counterReducer","resultReducer","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+VA4CeA,G,YAxCA,SAAAC,GACd,OACC,yBACCC,MAAO,CACNC,OAAQ,kBACRC,MAAO,OACPC,QAAS,kBACTC,MAAO,UAGR,yBAAKJ,MAAO,CAAEE,MAAO,OAAQC,QAAS,QACrC,4BAAQE,UAAU,SAASC,QAASP,EAAKQ,QAAzC,KAGA,uBAAGF,UAAU,cAAcN,EAAKS,SAChC,4BAAQH,UAAU,WAAWC,QAASP,EAAKU,UAA3C,MAID,yBACCH,QAASP,EAAKW,WACdV,MAAO,CACNE,MAAO,OACPS,UAAW,OACXP,MAAO,QACPH,OAAQ,kBAGT,8BAAOF,EAAKa,OACZ,0BAAMP,UAAU,aAAaN,EAAKc,OAClC,uBAAGR,UAAU,cAAb,eACcN,EAAKe,OADnB,IAC4Bf,EAAKgB,IADjC,QAGA,uBAAGV,UAAU,eAAeN,EAAKiB,SAAjC,cAED,gCChBYC,EArBI,SAAAC,GAClB,OACC,6BACC,kDAAwBA,EAAMC,MCU3BC,E,2MACLC,MAAQ,CACPC,MAAO,CACN,CACCH,GAAI,EACJX,QAAS,IACTI,MAAO,KACPC,MAAO,sBACPC,OAAQ,cACRC,IAAK,UACLC,SAAU,IAEX,CACCG,GAAI,EACJX,QAAS,IACTI,MAAO,KACPC,MACC,qFACDC,OAAQ,cACRC,IAAK,WACLC,SAAU,KAEX,CACCG,GAAI,EACJX,QAAS,GACTI,MAAO,KACPC,MACC,iGACDC,OAAQ,YACRC,IAAK,UACLC,SAAU,GAEX,CACCG,GAAI,EACJX,QAAS,KACTI,MAAO,WACPC,MACC,4EACDC,OAAQ,YACRC,IAAK,QACLC,SAAU,IAEX,CACCG,GAAI,EACJX,QAAS,GACTI,MAAO,KACPC,MACC,2DACDC,OAAQ,oBACRC,IAAK,WACLC,SAAU,IAGZO,UAAW,OACXC,SAAU,GACVC,UAAU,EACVC,UAAW,GACXC,QAAS,I,EAGVpB,OAAS,SAAAY,GACRS,QAAQC,IAAI,GAKZ,IAHA,IAAIP,EAAK,YAAO,EAAKD,MAAMC,OAGlBQ,EAAI,EAAGA,EAAIR,EAAMS,OAAQD,IAC7BR,EAAMQ,GAAGX,KAAOA,IAGnBG,EAAMQ,GAAGtB,SAAW,GAKtB,EAAKwB,SAAS,CACbV,MAAOA,K,EAITb,SAAW,SAAAU,GACVS,QAAQC,IAAI,GAKZ,IAHA,IAAIP,EAAK,YAAO,EAAKD,MAAMC,OAGlBQ,EAAI,EAAGA,EAAIR,EAAMS,OAAQD,IAC7BR,EAAMQ,GAAGX,KAAOA,IAGnBG,EAAMQ,GAAGtB,SAAW,GAKtB,EAAKwB,SAAS,CACbV,MAAOA,K,EAITZ,WAAa,SAAAS,GACZS,QAAQC,IAAIV,I,EAGbc,UAAY,SAAAC,GACX,EAAKF,SAAS,CAAEN,UAAWQ,EAAMC,OAAOC,S,EAGzCC,QAAU,SAAAH,GACT,EAAKF,SAAS,CAAEL,QAASO,EAAMC,OAAOC,S,EAGvCE,WAAa,SAAAJ,GAGZ,IAAIK,EAAQ,YAAO,EAAKlB,MAAMC,OAGxBkB,EAAa,CAClBrB,GAHWoB,EAASR,OAIpBvB,QAAS,EACTK,MAAO,EAAKQ,MAAMK,UAClBZ,OAAQ,EAAKO,MAAMG,SACnBT,IAAK,WACLC,SAAU,GAGXuB,EAASE,QAAQD,GAEjB,EAAKR,SAAS,CAAEV,MAAOiB,K,EAGxBG,OAAS,WACJ,EAAKrB,MAAMG,SAASO,OAAS,GAChC,EAAKC,SAAS,CAAEW,UAAW,0BAC3Bf,QAAQC,IAAI,eAEZ,EAAKG,SAAS,CAAEW,UAAW,gBAC3Bf,QAAQC,IAAI,eACZ,EAAKG,SAAS,CAAEP,UAAW,EAAKJ,MAAMI,a,EAIxCmB,aAAe,SAAAV,GACd,EAAKF,SAAS,CACbR,SAAUU,EAAMC,OAAOC,S,wEAIf,IAGLS,EAHI,OAKPA,EAJkBC,KAAKzB,MAAMI,SAK5B,6BACC,8CACA,0CACA,2BACCsB,KAAK,OACLC,KAAK,QACLC,SAAUH,KAAKb,YAEhB,iDACA,2BACCc,KAAK,OACLC,KAAK,MACLC,SAAUH,KAAKT,UAEhB,4BAAQ/B,QAASwC,KAAKR,YAAtB,SAIQ,KAGX,IAAMY,EACL,yBAAKlD,MAAO,CAAEI,MAAO,UACnB0C,KAAKzB,MAAMC,MAAM6B,KAAI,SAACpD,EAAMqD,GAC5B,OACC,yBAAKC,IAAKD,GACT,kBAAC,IAAD,CAAME,GAAI,IAAMF,GACf,kBAAC,EAAD,CACC/C,UAAU,kBACVG,QAAST,EAAKS,QACdI,MAAOb,EAAKa,MACZC,MAAOd,EAAKc,MACZC,OAAQf,EAAKe,OACbC,IAAKhB,EAAKgB,IACVC,SAAUjB,EAAKiB,SACfT,OAAQ,EAAKA,OAAOgD,KAAK,EAAMxD,EAAKoB,IACpCV,SAAU,EAAKA,SAAS8C,KAAK,EAAMxD,EAAKoB,IACxCT,WAAY,EAAKA,WAAW6C,KAC3B,EACAxD,EAAKoB,YAUb,OACC,yBAAKd,UAAU,OACd,kBAAC,IAAD,KACC,yBAAKA,UAAU,UACd,uBAAGA,UAAU,QAAb,gBACCyC,KAAKzB,MAAMG,SAASO,OAAS,GAC9Be,KAAKzB,MAAMI,SACV,6CAAmBqB,KAAKzB,MAAMG,UAC3B,KACHsB,KAAKzB,MAAMI,SAAW,KACtB,yBAAKzB,MAAO,CAAEE,MAAO,UACpB,2BACC6C,KAAK,OACLC,KAAK,WACLC,SAAUH,KAAKF,eAEhB,4BAAQtC,QAASwC,KAAKJ,QAAtB,WACA,2BAAII,KAAKzB,MAAMsB,aAIlB,yBAAK3C,MAAO,CAAEwD,OAAQ,SAAWN,GAChCL,EACD,kBAAC,IAAD,CAAOY,KAAK,OAAOC,UAAWC,KAE/B,8BAAOb,KAAK5B,MAAM0C,KAClB,4BAAQtD,QAASwC,KAAK5B,MAAM2C,oBAA5B,aAGA,4BAAQvD,QAASwC,KAAK5B,MAAM4C,cAA5B,YACA,4BAAQxD,QAASwC,KAAK5B,MAAM6C,OAA5B,SACA,4BAAQzD,QAASwC,KAAK5B,MAAM8C,OAA5B,cACA,6BACA,4BACC1D,QAAS,kBAAM,EAAKY,MAAM+C,cAAc,EAAK/C,MAAM0C,OADpD,gBAKA,4BACEd,KAAK5B,MAAMgD,cAAcf,KAAI,SAAAgB,GAAS,OACtC,wBACCd,IAAKc,EAAUhD,GACfb,QAAS,kBACR,EAAKY,MAAMkD,eAAeD,EAAUhD,MAGpCgD,EAAU/B,gB,GA1PAiC,aAuRHC,eApBS,SAAAjD,GACvB,MAAO,CACNuC,IAAKvC,EAAMuC,IAAIW,QACfL,cAAe7C,EAAMmD,IAAIC,YAIA,SAAAC,GAC1B,MAAO,CACNb,mBAAoB,kBAAMa,EAAS,CAAE3B,KC3Rd,eD4RvBe,aAAc,kBAAMY,EAAS,CAAE3B,KC3Rd,SD4RjBgB,MAAO,kBAAMW,EAAS,CAAE3B,KC3RP,MD2R8BX,MAAO,KACtD4B,MAAO,kBAAMU,EAAS,CAAE3B,KC3RP,MD2R8BX,MAAO,KACtD6B,cAAe,SAAAU,GAAM,OACpBD,EAAS,CAAE3B,KC5Rc,eD4RkB4B,OAAQA,KACpDP,eAAgB,SAAAjD,GAAE,OACjBuD,EAAS,CAAE3B,KC7Re,gBD6RkB6B,WAAYzD,QAI5CmD,CAA6ClD,GE1RxCyD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,WChBAC,EAAe,CACpBX,QAAS,GA6BKY,EA1BC,WAAmC,IAAlC9D,EAAiC,uDAAzB6D,EAAcE,EAAW,uCACjD,OAAQA,EAAOrC,MACd,IFRuB,YEStB,IAAMsC,EAAWC,OAAOC,OAAO,GAAIlE,GAEnC,OADAgE,EAASd,QAAUlD,EAAMkD,QAAU,EAC5Bc,EACR,IFXiB,MEYhB,OAAO,eACHhE,EADJ,CAECkD,QAASlD,EAAMkD,QAAU,IAE3B,IFfiB,MEgBhB,OAAO,eACHlD,EADJ,CAECkD,QAASlD,EAAMkD,QAAUa,EAAOhD,QAElC,IFnBiB,MEoBhB,OAAO,eACHf,EADJ,CAECkD,QAASlD,EAAMkD,QAAUa,EAAOhD,QAElC,QACC,OAAOf,IC1BJ6D,EAAe,CACpBT,QAAS,IA6BKU,EA1BC,WAAmC,IAAlC9D,EAAiC,uDAAzB6D,EAAcE,EAAW,uCACjD,OAAQA,EAAOrC,MACd,IHJ0B,eGKzB,OAAO,eACH1B,EADJ,CAECoD,QAASpD,EAAMoD,QAAQe,OAAO,CAC7BrE,GAAI,IAAIsE,KACRrD,MAAOgD,EAAOT,WAGjB,IHX2B,gBGe1B,IAAMe,EAAerE,EAAMoD,QAAQkB,QAClC,SAAAhB,GAAM,OAAIA,EAAOxD,KAAOiE,EAAOR,cAEhC,OAAO,eACHvD,EADJ,CAECoD,QAASiB,IAEX,QACC,OAAOrE,ICjBJuE,EAAcC,YAAgB,CACnCjC,IAAKkC,EACLtB,IAAKuB,IAGAC,EAAQC,YAAYL,GAE1BM,IAASC,OACR,kBAAC,IAAD,CAAUH,MAAOA,GAChB,kBAAC,EAAD,OAEDI,SAASC,eAAe,SH6GnB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.c528a1b6.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport \"./Thread.css\";\r\n\r\nconst thread = post => {\r\n\treturn (\r\n\t\t<div\r\n\t\t\tstyle={{\r\n\t\t\t\tborder: \"1px solid black\",\r\n\t\t\t\tfloat: \"left\",\r\n\t\t\t\tpadding: \"5px 5px 0px 5px\",\r\n\t\t\t\twidth: \"750px\"\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<div style={{ float: \"left\", padding: \"5px\" }}>\r\n\t\t\t\t<button className=\"Upvote\" onClick={post.upVote}>\r\n\t\t\t\t\t^\r\n\t\t\t\t</button>\r\n\t\t\t\t<p className=\"UpvoteText\">{post.upvotes}</p>\r\n\t\t\t\t<button className=\"Downvote\" onClick={post.downVote}>\r\n\t\t\t\t\tv\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t\t<div\r\n\t\t\t\tonClick={post.openThread}\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tfloat: \"left\",\r\n\t\t\t\t\ttextAlign: \"left\",\r\n\t\t\t\t\twidth: \"700px\",\r\n\t\t\t\t\tborder: \"1px solid red\"\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<span>{post.flair}</span>\r\n\t\t\t\t<span className=\"TitleText\">{post.title}</span>\r\n\t\t\t\t<p className=\"AuthorText\">\r\n\t\t\t\t\tPosted by u/{post.author} {post.age} ago\r\n\t\t\t\t</p>\r\n\t\t\t\t<p className=\"CommentText\">{post.comments} Comments</p>\r\n\t\t\t</div>\r\n\t\t\t<br />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default thread;\r\n// a function which returns a HOC\r\n","import React from \"react\";\r\n\r\nconst fullThread = props => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<p>I am a thread named {props.id}</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\n// const mapStateToProps = state => {\r\n// \treturn {\r\n// \t\tctr: state.counter\r\n// \t};\r\n// };\r\n\r\n// const mapDispatchToProps = dispatch => {\r\n// \treturn {\r\n// \t\tonIncrementCounter: () => dispatch({ type: \"INCREMENT\" })\r\n// \t};\r\n// };\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(fullThread);\r\nexport default fullThread;\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport \"./App.css\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport * as actionTypes from \"./store/actions\";\r\n\r\nimport Thread from \"./Thread/Thread\";\r\nimport FullThread from \"./FullThread/FullThread\";\r\n\r\n// const APP_ID = \"m9eXdciVGsQDqw\";\r\n// const APP_SECRET = \"h9cVbWML9Tf59nWu0vaBAukMYD8\";\r\n// const hard_url =\r\n// \"https://www.reddit.com/r/learnprogramming/new/.json?count=25&after=\";\r\n\r\nclass App extends Component {\r\n\tstate = {\r\n\t\tposts: [\r\n\t\t\t{\r\n\t\t\t\tid: 0,\r\n\t\t\t\tupvotes: 831,\r\n\t\t\t\tflair: null,\r\n\t\t\t\ttitle: \"New? READ ME FIRST!\",\r\n\t\t\t\tauthor: \"michael0x2a\",\r\n\t\t\t\tage: \"2 years\",\r\n\t\t\t\tcomments: 15\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tid: 1,\r\n\t\t\t\tupvotes: 1000,\r\n\t\t\t\tflair: null,\r\n\t\t\t\ttitle:\r\n\t\t\t\t\t\"You guys interested in a website that focuses on learning design / ux / ui / css ?\",\r\n\t\t\t\tauthor: \"web_dev1996\",\r\n\t\t\t\tage: \"13 hours\",\r\n\t\t\t\tcomments: 130\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tid: 2,\r\n\t\t\t\tupvotes: 23,\r\n\t\t\t\tflair: null,\r\n\t\t\t\ttitle:\r\n\t\t\t\t\t\"How would you learn to code if you had all the free time? (Enough savings to sustain yourself)\",\r\n\t\t\t\tauthor: \"hakerys23\",\r\n\t\t\t\tage: \"6 hours\",\r\n\t\t\t\tcomments: 9\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tid: 3,\r\n\t\t\t\tupvotes: 3300,\r\n\t\t\t\tflair: \"Resource\",\r\n\t\t\t\ttitle:\r\n\t\t\t\t\t\"Learn the syntax of any programming language really fast, like in minutes\",\r\n\t\t\t\tauthor: \"1TMission\",\r\n\t\t\t\tage: \"1 day\",\r\n\t\t\t\tcomments: 91\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tid: 4,\r\n\t\t\t\tupvotes: 16,\r\n\t\t\t\tflair: null,\r\n\t\t\t\ttitle:\r\n\t\t\t\t\t\"What tool do you use to plan your projects from scratch?\",\r\n\t\t\t\tauthor: \"wulfgar4president\",\r\n\t\t\t\tage: \"10 hours\",\r\n\t\t\t\tcomments: 6\r\n\t\t\t}\r\n\t\t],\r\n\t\tcheckname: \"test\",\r\n\t\tusername: \"\",\r\n\t\tloggedIn: false,\r\n\t\ttempTitle: \"\",\r\n\t\ttempMsg: \"\"\r\n\t};\r\n\r\n\tupVote = id => {\r\n\t\tconsole.log(1);\r\n\t\t// spread the posts out into an immutable object\r\n\t\tlet posts = [...this.state.posts];\r\n\r\n\t\t// Look for the correct post to modify\r\n\t\tfor (let i = 0; i < posts.length; i++) {\r\n\t\t\tif (posts[i].id === id) {\r\n\t\t\t\t// Modify it with +1 upvotes\r\n\t\t\t\t// console.log(posts[i]);\r\n\t\t\t\tposts[i].upvotes += 1;\r\n\t\t\t\t// console.log(posts[i]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.setState({\r\n\t\t\tposts: posts\r\n\t\t});\r\n\t};\r\n\r\n\tdownVote = id => {\r\n\t\tconsole.log(2);\r\n\t\t// spread the posts out into an immutable object\r\n\t\tlet posts = [...this.state.posts];\r\n\r\n\t\t// Look for the correct post to modify\r\n\t\tfor (let i = 0; i < posts.length; i++) {\r\n\t\t\tif (posts[i].id === id) {\r\n\t\t\t\t// Modify it with -1 upvotes (+1 downvotes)\r\n\t\t\t\t// console.log(posts[i]);\r\n\t\t\t\tposts[i].upvotes -= 1;\r\n\t\t\t\t// console.log(posts[i]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.setState({\r\n\t\t\tposts: posts\r\n\t\t});\r\n\t};\r\n\r\n\topenThread = id => {\r\n\t\tconsole.log(id);\r\n\t};\r\n\r\n\tpostTitle = event => {\r\n\t\tthis.setState({ tempTitle: event.target.value });\r\n\t};\r\n\r\n\tpostMsg = event => {\r\n\t\tthis.setState({ tempMsg: event.target.value });\r\n\t};\r\n\r\n\tpostThread = event => {\r\n\t\t// the idea: when the button is clicked, record the contents of input fields\r\n\t\t// into stored state.\r\n\t\tlet newPosts = [...this.state.posts];\r\n\t\tlet newId = newPosts.length;\r\n\r\n\t\tconst tempThread = {\r\n\t\t\tid: newId,\r\n\t\t\tupvotes: 1,\r\n\t\t\ttitle: this.state.tempTitle,\r\n\t\t\tauthor: this.state.username,\r\n\t\t\tage: \"1 minute\",\r\n\t\t\tcomments: 0\r\n\t\t};\r\n\r\n\t\tnewPosts.unshift(tempThread);\r\n\r\n\t\tthis.setState({ posts: newPosts });\r\n\t};\r\n\r\n\tsignUp = () => {\r\n\t\tif (this.state.username.length < 3) {\r\n\t\t\tthis.setState({ checkName: \"Username is too short\" });\r\n\t\t\tconsole.log(\"Too short\");\r\n\t\t} else {\r\n\t\t\tthis.setState({ checkName: \"Long enough\" });\r\n\t\t\tconsole.log(\"Long enough\");\r\n\t\t\tthis.setState({ loggedIn: !this.state.loggedIn });\r\n\t\t}\r\n\t};\r\n\r\n\thandleChange = event => {\r\n\t\tthis.setState({\r\n\t\t\tusername: event.target.value\r\n\t\t});\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst isLoggedIn = this.state.loggedIn;\r\n\r\n\t\tlet postBox;\r\n\t\tif (isLoggedIn) {\r\n\t\t\tpostBox = (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<p>Post something!</p>\r\n\t\t\t\t\t<p>Post Title:</p>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tname=\"title\"\r\n\t\t\t\t\t\tonChange={this.postTitle}\r\n\t\t\t\t\t></input>\r\n\t\t\t\t\t<p>Message (Optional)</p>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tname=\"msg\"\r\n\t\t\t\t\t\tonChange={this.postMsg}\r\n\t\t\t\t\t></input>\r\n\t\t\t\t\t<button onClick={this.postThread}>Post</button>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tpostBox = null;\r\n\t\t}\r\n\r\n\t\tconst threads = (\r\n\t\t\t<div style={{ width: \"750px\" }}>\r\n\t\t\t\t{this.state.posts.map((post, index) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div key={index}>\r\n\t\t\t\t\t\t\t<Link to={\"/\" + index}>\r\n\t\t\t\t\t\t\t\t<Thread\r\n\t\t\t\t\t\t\t\t\tclassName=\"ThreadContainer\"\r\n\t\t\t\t\t\t\t\t\tupvotes={post.upvotes}\r\n\t\t\t\t\t\t\t\t\tflair={post.flair}\r\n\t\t\t\t\t\t\t\t\ttitle={post.title}\r\n\t\t\t\t\t\t\t\t\tauthor={post.author}\r\n\t\t\t\t\t\t\t\t\tage={post.age}\r\n\t\t\t\t\t\t\t\t\tcomments={post.comments}\r\n\t\t\t\t\t\t\t\t\tupVote={this.upVote.bind(this, post.id)}\r\n\t\t\t\t\t\t\t\t\tdownVote={this.downVote.bind(this, post.id)}\r\n\t\t\t\t\t\t\t\t\topenThread={this.openThread.bind(\r\n\t\t\t\t\t\t\t\t\t\tthis,\r\n\t\t\t\t\t\t\t\t\t\tpost.id\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t);\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"App\">\r\n\t\t\t\t<Router>\r\n\t\t\t\t\t<div className=\"Header\">\r\n\t\t\t\t\t\t<p className=\"Logo\">Reddit Clone</p>\r\n\t\t\t\t\t\t{this.state.username.length > 2 &&\r\n\t\t\t\t\t\tthis.state.loggedIn ? (\r\n\t\t\t\t\t\t\t<p>Logged in as u/{this.state.username}</p>\r\n\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t{this.state.loggedIn ? null : (\r\n\t\t\t\t\t\t\t<div style={{ float: \"right\" }}>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tname=\"Username\"\r\n\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t\t></input>\r\n\t\t\t\t\t\t\t\t<button onClick={this.signUp}>Sign Up</button>\r\n\t\t\t\t\t\t\t\t<p>{this.state.checkName}</p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div style={{ margin: \"20px\" }}>{threads}</div>\r\n\t\t\t\t\t{postBox}\r\n\t\t\t\t\t<Route path=\"/:id\" component={FullThread}></Route>\r\n\t\t\t\t</Router>\r\n\t\t\t\t<span>{this.props.ctr}</span>\r\n\t\t\t\t<button onClick={this.props.onIncrementCounter}>\r\n\t\t\t\t\tIncrement\r\n\t\t\t\t</button>\r\n\t\t\t\t<button onClick={this.props.onDecCounter}>Decrease</button>\r\n\t\t\t\t<button onClick={this.props.onAdd}>Add 3</button>\r\n\t\t\t\t<button onClick={this.props.onSub}>Subtract 5</button>\r\n\t\t\t\t<hr />\r\n\t\t\t\t<button\r\n\t\t\t\t\tonClick={() => this.props.onStoreResult(this.props.ctr)}\r\n\t\t\t\t>\r\n\t\t\t\t\tstore result\r\n\t\t\t\t</button>\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t{this.props.storedResults.map(strResult => (\r\n\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\tkey={strResult.id}\r\n\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\tthis.props.onDeleteResult(strResult.id)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{strResult.value}\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tctr: state.ctr.counter,\r\n\t\tstoredResults: state.res.results\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn {\r\n\t\tonIncrementCounter: () => dispatch({ type: actionTypes.INCREMENT }),\r\n\t\tonDecCounter: () => dispatch({ type: actionTypes.DEC }),\r\n\t\tonAdd: () => dispatch({ type: actionTypes.ADD, value: 3 }),\r\n\t\tonSub: () => dispatch({ type: actionTypes.SUB, value: 5 }),\r\n\t\tonStoreResult: result =>\r\n\t\t\tdispatch({ type: actionTypes.STORE_RESULT, result: result }),\r\n\t\tonDeleteResult: id =>\r\n\t\t\tdispatch({ type: actionTypes.DELETE_RESULT, resultElId: id })\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","export const INCREMENT = \"INCREMENT\";\r\nexport const DEC = \"DEC\";\r\nexport const ADD = \"ADD\";\r\nexport const SUB = \"SUB\";\r\nexport const STORE_RESULT = \"STORE_RESULT\";\r\nexport const DELETE_RESULT = \"DELETE_RESULT\";\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from \"../actions\";\r\n\r\nconst initialState = {\r\n\tcounter: 0\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase actionTypes.INCREMENT:\r\n\t\t\tconst newState = Object.assign({}, state);\r\n\t\t\tnewState.counter = state.counter + 1;\r\n\t\t\treturn newState;\r\n\t\tcase actionTypes.DEC:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcounter: state.counter - 1\r\n\t\t\t};\r\n\t\tcase actionTypes.ADD:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcounter: state.counter + action.value\r\n\t\t\t};\r\n\t\tcase actionTypes.SUB:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcounter: state.counter - action.value\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default reducer;\r\n","import * as actionTypes from \"../actions\";\r\n\r\nconst initialState = {\r\n\tresults: []\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase actionTypes.STORE_RESULT:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tresults: state.results.concat({\r\n\t\t\t\t\tid: new Date(),\r\n\t\t\t\t\tvalue: action.result\r\n\t\t\t\t})\r\n\t\t\t};\r\n\t\tcase actionTypes.DELETE_RESULT:\r\n\t\t\t// const id = 2;\r\n\t\t\t// const newArray = [...state.results];\r\n\t\t\t// state.results.splice(id, 1);\r\n\t\t\tconst updatedArray = state.results.filter(\r\n\t\t\t\tresult => result.id !== action.resultElId\r\n\t\t\t);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tresults: updatedArray\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default reducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore, combineReducers } from \"redux\";\nimport { Provider } from \"react-redux\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport counterReducer from \"./store/reducers/counter\";\nimport resultReducer from \"./store/reducers/result\";\n\nconst rootReducer = combineReducers({\n\tctr: counterReducer,\n\tres: resultReducer\n});\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}